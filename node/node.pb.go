// Code generated by protoc-gen-go. DO NOT EDIT.
// source: node.proto

package node

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Response_RequestStatus int32

const (
	Response_SUCCESSFUL Response_RequestStatus = 0
	Response_FAILED     Response_RequestStatus = 1
)

var Response_RequestStatus_name = map[int32]string{
	0: "SUCCESSFUL",
	1: "FAILED",
}

var Response_RequestStatus_value = map[string]int32{
	"SUCCESSFUL": 0,
	"FAILED":     1,
}

func (x Response_RequestStatus) String() string {
	return proto.EnumName(Response_RequestStatus_name, int32(x))
}

func (Response_RequestStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{2, 0}
}

type UUID struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UUID) Reset()         { *m = UUID{} }
func (m *UUID) String() string { return proto.CompactTextString(m) }
func (*UUID) ProtoMessage()    {}
func (*UUID) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{0}
}

func (m *UUID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UUID.Unmarshal(m, b)
}
func (m *UUID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UUID.Marshal(b, m, deterministic)
}
func (m *UUID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UUID.Merge(m, src)
}
func (m *UUID) XXX_Size() int {
	return xxx_messageInfo_UUID.Size(m)
}
func (m *UUID) XXX_DiscardUnknown() {
	xxx_messageInfo_UUID.DiscardUnknown(m)
}

var xxx_messageInfo_UUID proto.InternalMessageInfo

func (m *UUID) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type VmConfig struct {
	VmID                 *UUID    `protobuf:"bytes,1,opt,name=vmID,proto3" json:"vmID,omitempty"`
	Memory               int64    `protobuf:"varint,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Vcpus                int64    `protobuf:"varint,3,opt,name=vcpus,proto3" json:"vcpus,omitempty"`
	KernelImage          string   `protobuf:"bytes,4,opt,name=kernelImage,proto3" json:"kernelImage,omitempty"`
	RootFileSystem       string   `protobuf:"bytes,5,opt,name=rootFileSystem,proto3" json:"rootFileSystem,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VmConfig) Reset()         { *m = VmConfig{} }
func (m *VmConfig) String() string { return proto.CompactTextString(m) }
func (*VmConfig) ProtoMessage()    {}
func (*VmConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{1}
}

func (m *VmConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VmConfig.Unmarshal(m, b)
}
func (m *VmConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VmConfig.Marshal(b, m, deterministic)
}
func (m *VmConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VmConfig.Merge(m, src)
}
func (m *VmConfig) XXX_Size() int {
	return xxx_messageInfo_VmConfig.Size(m)
}
func (m *VmConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_VmConfig.DiscardUnknown(m)
}

var xxx_messageInfo_VmConfig proto.InternalMessageInfo

func (m *VmConfig) GetVmID() *UUID {
	if m != nil {
		return m.VmID
	}
	return nil
}

func (m *VmConfig) GetMemory() int64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *VmConfig) GetVcpus() int64 {
	if m != nil {
		return m.Vcpus
	}
	return 0
}

func (m *VmConfig) GetKernelImage() string {
	if m != nil {
		return m.KernelImage
	}
	return ""
}

func (m *VmConfig) GetRootFileSystem() string {
	if m != nil {
		return m.RootFileSystem
	}
	return ""
}

type Response struct {
	Status               Response_RequestStatus `protobuf:"varint,1,opt,name=status,proto3,enum=Response_RequestStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetStatus() Response_RequestStatus {
	if m != nil {
		return m.Status
	}
	return Response_SUCCESSFUL
}

type VmList struct {
	VmID                 *UUID    `protobuf:"bytes,1,opt,name=vmID,proto3" json:"vmID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VmList) Reset()         { *m = VmList{} }
func (m *VmList) String() string { return proto.CompactTextString(m) }
func (*VmList) ProtoMessage()    {}
func (*VmList) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{3}
}

func (m *VmList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VmList.Unmarshal(m, b)
}
func (m *VmList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VmList.Marshal(b, m, deterministic)
}
func (m *VmList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VmList.Merge(m, src)
}
func (m *VmList) XXX_Size() int {
	return xxx_messageInfo_VmList.Size(m)
}
func (m *VmList) XXX_DiscardUnknown() {
	xxx_messageInfo_VmList.DiscardUnknown(m)
}

var xxx_messageInfo_VmList proto.InternalMessageInfo

func (m *VmList) GetVmID() *UUID {
	if m != nil {
		return m.VmID
	}
	return nil
}

func init() {
	proto.RegisterEnum("Response_RequestStatus", Response_RequestStatus_name, Response_RequestStatus_value)
	proto.RegisterType((*UUID)(nil), "UUID")
	proto.RegisterType((*VmConfig)(nil), "VmConfig")
	proto.RegisterType((*Response)(nil), "Response")
	proto.RegisterType((*VmList)(nil), "VmList")
}

func init() { proto.RegisterFile("node.proto", fileDescriptor_0c843d59d2d938e7) }

var fileDescriptor_0c843d59d2d938e7 = []byte{
	// 336 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0x5f, 0x6b, 0xc2, 0x30,
	0x14, 0xc5, 0xed, 0xac, 0x55, 0xaf, 0x4c, 0x24, 0x0c, 0xd7, 0x39, 0x1f, 0x5c, 0x06, 0x43, 0xd8,
	0x88, 0xe0, 0x3e, 0xc1, 0xf0, 0x0f, 0x14, 0x74, 0x0f, 0x0d, 0xed, 0x7b, 0x9d, 0xd7, 0x4e, 0xd6,
	0x34, 0x5d, 0x93, 0x0a, 0x7e, 0x98, 0x7d, 0xd7, 0x61, 0xaa, 0x63, 0xee, 0x61, 0x8f, 0xe7, 0xfc,
	0x6e, 0x72, 0x0f, 0xf7, 0x00, 0xa4, 0x72, 0x8d, 0x2c, 0xcb, 0xa5, 0x96, 0xbd, 0xdb, 0x58, 0xca,
	0x38, 0xc1, 0x91, 0x51, 0xab, 0x62, 0x33, 0x42, 0x91, 0xe9, 0x7d, 0x09, 0x69, 0x1f, 0xec, 0x20,
	0xf0, 0xa6, 0xe4, 0x0a, 0x6a, 0xbb, 0x28, 0x29, 0xd0, 0xb5, 0x06, 0xd6, 0xb0, 0xe9, 0x97, 0x82,
	0x7e, 0x59, 0xd0, 0x08, 0xc5, 0x44, 0xa6, 0x9b, 0x6d, 0x4c, 0x6e, 0xc0, 0xde, 0x09, 0x6f, 0x6a,
	0x26, 0x5a, 0xe3, 0x1a, 0x3b, 0xbc, 0xf3, 0x8d, 0x45, 0xba, 0xe0, 0x08, 0x14, 0x32, 0xdf, 0xbb,
	0x17, 0x03, 0x6b, 0x58, 0xf5, 0x8f, 0xca, 0xfc, 0xfa, 0x96, 0x15, 0xca, 0xad, 0x1a, 0xbb, 0x14,
	0x64, 0x00, 0xad, 0x0f, 0xcc, 0x53, 0x4c, 0x3c, 0x11, 0xc5, 0xe8, 0xda, 0x66, 0xe3, 0x6f, 0x8b,
	0x3c, 0x40, 0x3b, 0x97, 0x52, 0xcf, 0xb7, 0x09, 0xf2, 0xbd, 0xd2, 0x28, 0xdc, 0x9a, 0x19, 0xfa,
	0xe3, 0xd2, 0x77, 0x68, 0xf8, 0xa8, 0x32, 0x99, 0x2a, 0x24, 0x23, 0x70, 0x94, 0x8e, 0x74, 0xa1,
	0x4c, 0xc0, 0xf6, 0xf8, 0x9a, 0x9d, 0x10, 0xf3, 0xf1, 0xb3, 0x40, 0xa5, 0xb9, 0xc1, 0xfe, 0x71,
	0x8c, 0x3e, 0xc2, 0xe5, 0x19, 0x20, 0x6d, 0x00, 0x1e, 0x4c, 0x26, 0x33, 0xce, 0xe7, 0xc1, 0xa2,
	0x53, 0x21, 0x00, 0xce, 0xfc, 0xc5, 0x5b, 0xcc, 0xa6, 0x1d, 0x8b, 0xde, 0x83, 0x13, 0x8a, 0xc5,
	0x56, 0xe9, 0x7f, 0xce, 0x30, 0x2e, 0xc0, 0x7e, 0x95, 0x6b, 0x24, 0x77, 0x50, 0xe7, 0x3a, 0xca,
	0x75, 0xb8, 0x24, 0x4d, 0x76, 0xba, 0x5f, 0xaf, 0xf9, 0x13, 0x88, 0x56, 0x48, 0x1f, 0x1c, 0xae,
	0x65, 0x16, 0x2e, 0x49, 0xf9, 0xc3, 0x39, 0x7d, 0x82, 0xfa, 0x61, 0x57, 0xb8, 0x54, 0xa4, 0xcb,
	0xca, 0xfa, 0xd8, 0xa9, 0x3e, 0x36, 0x3b, 0xd4, 0xd7, 0xab, 0xb3, 0x32, 0x0f, 0xad, 0xac, 0x1c,
	0x83, 0x9e, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x1f, 0x38, 0xd7, 0x84, 0xf5, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NodeClient is the client API for Node service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeClient interface {
	StartVM(ctx context.Context, in *VmConfig, opts ...grpc.CallOption) (*Response, error)
	StopVM(ctx context.Context, in *UUID, opts ...grpc.CallOption) (*Response, error)
	ListVMs(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VmList, error)
}

type nodeClient struct {
	cc *grpc.ClientConn
}

func NewNodeClient(cc *grpc.ClientConn) NodeClient {
	return &nodeClient{cc}
}

func (c *nodeClient) StartVM(ctx context.Context, in *VmConfig, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/Node/StartVM", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) StopVM(ctx context.Context, in *UUID, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/Node/StopVM", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) ListVMs(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VmList, error) {
	out := new(VmList)
	err := c.cc.Invoke(ctx, "/Node/ListVMs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeServer is the server API for Node service.
type NodeServer interface {
	StartVM(context.Context, *VmConfig) (*Response, error)
	StopVM(context.Context, *UUID) (*Response, error)
	ListVMs(context.Context, *empty.Empty) (*VmList, error)
}

// UnimplementedNodeServer can be embedded to have forward compatible implementations.
type UnimplementedNodeServer struct {
}

func (*UnimplementedNodeServer) StartVM(ctx context.Context, req *VmConfig) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartVM not implemented")
}
func (*UnimplementedNodeServer) StopVM(ctx context.Context, req *UUID) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopVM not implemented")
}
func (*UnimplementedNodeServer) ListVMs(ctx context.Context, req *empty.Empty) (*VmList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListVMs not implemented")
}

func RegisterNodeServer(s *grpc.Server, srv NodeServer) {
	s.RegisterService(&_Node_serviceDesc, srv)
}

func _Node_StartVM_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VmConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).StartVM(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Node/StartVM",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).StartVM(ctx, req.(*VmConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_StopVM_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UUID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).StopVM(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Node/StopVM",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).StopVM(ctx, req.(*UUID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_ListVMs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).ListVMs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Node/ListVMs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).ListVMs(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Node_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Node",
	HandlerType: (*NodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartVM",
			Handler:    _Node_StartVM_Handler,
		},
		{
			MethodName: "StopVM",
			Handler:    _Node_StopVM_Handler,
		},
		{
			MethodName: "ListVMs",
			Handler:    _Node_ListVMs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "node.proto",
}
