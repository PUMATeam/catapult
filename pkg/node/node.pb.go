// Code generated by protoc-gen-go. DO NOT EDIT.
// source: node.proto

package node

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RequestStatus int32

const (
	RequestStatus_SUCCESSFUL RequestStatus = 0
	RequestStatus_FAILED     RequestStatus = 1
)

var RequestStatus_name = map[int32]string{
	0: "SUCCESSFUL",
	1: "FAILED",
}

var RequestStatus_value = map[string]int32{
	"SUCCESSFUL": 0,
	"FAILED":     1,
}

func (x RequestStatus) String() string {
	return proto.EnumName(RequestStatus_name, int32(x))
}

func (RequestStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{0}
}

type HealthCheckState int32

const (
	HealthCheckState_DOWN HealthCheckState = 0
	HealthCheckState_UP   HealthCheckState = 1
)

var HealthCheckState_name = map[int32]string{
	0: "DOWN",
	1: "UP",
}

var HealthCheckState_value = map[string]int32{
	"DOWN": 0,
	"UP":   1,
}

func (x HealthCheckState) String() string {
	return proto.EnumName(HealthCheckState_name, int32(x))
}

func (HealthCheckState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{1}
}

type UUID struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UUID) Reset()         { *m = UUID{} }
func (m *UUID) String() string { return proto.CompactTextString(m) }
func (*UUID) ProtoMessage()    {}
func (*UUID) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{0}
}

func (m *UUID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UUID.Unmarshal(m, b)
}
func (m *UUID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UUID.Marshal(b, m, deterministic)
}
func (m *UUID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UUID.Merge(m, src)
}
func (m *UUID) XXX_Size() int {
	return xxx_messageInfo_UUID.Size(m)
}
func (m *UUID) XXX_DiscardUnknown() {
	xxx_messageInfo_UUID.DiscardUnknown(m)
}

var xxx_messageInfo_UUID proto.InternalMessageInfo

func (m *UUID) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type VmConfig struct {
	VmID                 *UUID    `protobuf:"bytes,1,opt,name=vmID,proto3" json:"vmID,omitempty"`
	Memory               int64    `protobuf:"varint,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Vcpus                int64    `protobuf:"varint,3,opt,name=vcpus,proto3" json:"vcpus,omitempty"`
	KernelImage          string   `protobuf:"bytes,4,opt,name=kernelImage,proto3" json:"kernelImage,omitempty"`
	RootFileSystem       string   `protobuf:"bytes,5,opt,name=rootFileSystem,proto3" json:"rootFileSystem,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VmConfig) Reset()         { *m = VmConfig{} }
func (m *VmConfig) String() string { return proto.CompactTextString(m) }
func (*VmConfig) ProtoMessage()    {}
func (*VmConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{1}
}

func (m *VmConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VmConfig.Unmarshal(m, b)
}
func (m *VmConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VmConfig.Marshal(b, m, deterministic)
}
func (m *VmConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VmConfig.Merge(m, src)
}
func (m *VmConfig) XXX_Size() int {
	return xxx_messageInfo_VmConfig.Size(m)
}
func (m *VmConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_VmConfig.DiscardUnknown(m)
}

var xxx_messageInfo_VmConfig proto.InternalMessageInfo

func (m *VmConfig) GetVmID() *UUID {
	if m != nil {
		return m.VmID
	}
	return nil
}

func (m *VmConfig) GetMemory() int64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *VmConfig) GetVcpus() int64 {
	if m != nil {
		return m.Vcpus
	}
	return 0
}

func (m *VmConfig) GetKernelImage() string {
	if m != nil {
		return m.KernelImage
	}
	return ""
}

func (m *VmConfig) GetRootFileSystem() string {
	if m != nil {
		return m.RootFileSystem
	}
	return ""
}

type Response struct {
	Status               RequestStatus `protobuf:"varint,1,opt,name=status,proto3,enum=RequestStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetStatus() RequestStatus {
	if m != nil {
		return m.Status
	}
	return RequestStatus_SUCCESSFUL
}

type HealthCheckResponse struct {
	State                HealthCheckState `protobuf:"varint,1,opt,name=state,proto3,enum=HealthCheckState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *HealthCheckResponse) Reset()         { *m = HealthCheckResponse{} }
func (m *HealthCheckResponse) String() string { return proto.CompactTextString(m) }
func (*HealthCheckResponse) ProtoMessage()    {}
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{3}
}

func (m *HealthCheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckResponse.Unmarshal(m, b)
}
func (m *HealthCheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckResponse.Marshal(b, m, deterministic)
}
func (m *HealthCheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckResponse.Merge(m, src)
}
func (m *HealthCheckResponse) XXX_Size() int {
	return xxx_messageInfo_HealthCheckResponse.Size(m)
}
func (m *HealthCheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckResponse proto.InternalMessageInfo

func (m *HealthCheckResponse) GetState() HealthCheckState {
	if m != nil {
		return m.State
	}
	return HealthCheckState_DOWN
}

type VmList struct {
	VmID                 *UUID    `protobuf:"bytes,1,opt,name=vmID,proto3" json:"vmID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VmList) Reset()         { *m = VmList{} }
func (m *VmList) String() string { return proto.CompactTextString(m) }
func (*VmList) ProtoMessage()    {}
func (*VmList) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{4}
}

func (m *VmList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VmList.Unmarshal(m, b)
}
func (m *VmList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VmList.Marshal(b, m, deterministic)
}
func (m *VmList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VmList.Merge(m, src)
}
func (m *VmList) XXX_Size() int {
	return xxx_messageInfo_VmList.Size(m)
}
func (m *VmList) XXX_DiscardUnknown() {
	xxx_messageInfo_VmList.DiscardUnknown(m)
}

var xxx_messageInfo_VmList proto.InternalMessageInfo

func (m *VmList) GetVmID() *UUID {
	if m != nil {
		return m.VmID
	}
	return nil
}

func init() {
	proto.RegisterEnum("RequestStatus", RequestStatus_name, RequestStatus_value)
	proto.RegisterEnum("HealthCheckState", HealthCheckState_name, HealthCheckState_value)
	proto.RegisterType((*UUID)(nil), "UUID")
	proto.RegisterType((*VmConfig)(nil), "VmConfig")
	proto.RegisterType((*Response)(nil), "Response")
	proto.RegisterType((*HealthCheckResponse)(nil), "HealthCheckResponse")
	proto.RegisterType((*VmList)(nil), "VmList")
}

func init() { proto.RegisterFile("node.proto", fileDescriptor_0c843d59d2d938e7) }

var fileDescriptor_0c843d59d2d938e7 = []byte{
	// 406 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0x4e, 0xb6, 0xd4, 0x6d, 0xcf, 0x44, 0x15, 0xcc, 0x34, 0x85, 0xb2, 0x8b, 0x62, 0x10, 0x4c,
	0x03, 0x79, 0x52, 0xb9, 0xe1, 0x0a, 0x09, 0x35, 0xad, 0x88, 0xd4, 0x0e, 0x94, 0x28, 0xe1, 0x3a,
	0xdb, 0xce, 0xb2, 0x6a, 0x71, 0x1c, 0x62, 0x67, 0x52, 0x1f, 0x86, 0x67, 0xe0, 0x15, 0x51, 0xec,
	0x16, 0x6d, 0x13, 0x70, 0xf9, 0xfd, 0xf9, 0x7c, 0xb6, 0x0f, 0x40, 0x25, 0xaf, 0x90, 0xd7, 0x8d,
	0xd4, 0x72, 0xfc, 0xa2, 0x90, 0xb2, 0x28, 0xf1, 0xcc, 0xa0, 0x8b, 0xf6, 0xfa, 0x0c, 0x45, 0xad,
	0x37, 0x56, 0x64, 0xc7, 0xe0, 0xa5, 0x69, 0x14, 0xd2, 0x43, 0xe8, 0xdd, 0xe5, 0x65, 0x8b, 0x81,
	0x3b, 0x71, 0x4f, 0x86, 0xb1, 0x05, 0xec, 0xa7, 0x0b, 0x83, 0x4c, 0xcc, 0x64, 0x75, 0xbd, 0x2e,
	0xe8, 0x73, 0xf0, 0xee, 0x44, 0x14, 0x1a, 0xc7, 0xc1, 0xb4, 0xc7, 0xbb, 0x5c, 0x6c, 0x28, 0x7a,
	0x04, 0x44, 0xa0, 0x90, 0xcd, 0x26, 0xd8, 0x9b, 0xb8, 0x27, 0xfb, 0xf1, 0x16, 0x99, 0x53, 0x2f,
	0xeb, 0x56, 0x05, 0xfb, 0x86, 0xb6, 0x80, 0x4e, 0xe0, 0xe0, 0x16, 0x9b, 0x0a, 0xcb, 0x48, 0xe4,
	0x05, 0x06, 0x9e, 0x99, 0x78, 0x9f, 0xa2, 0x6f, 0x60, 0xd4, 0x48, 0xa9, 0x17, 0xeb, 0x12, 0x93,
	0x8d, 0xd2, 0x28, 0x82, 0x9e, 0x31, 0x3d, 0x62, 0xd9, 0x14, 0x06, 0x31, 0xaa, 0x5a, 0x56, 0xaa,
	0xcb, 0x10, 0xa5, 0x73, 0xdd, 0x2a, 0x53, 0x70, 0x34, 0x1d, 0xf1, 0x18, 0x7f, 0xb4, 0xa8, 0x74,
	0x62, 0xd8, 0x78, 0xab, 0xb2, 0x4f, 0xf0, 0xec, 0x0b, 0xe6, 0xa5, 0xbe, 0x99, 0xdd, 0xe0, 0xe5,
	0xed, 0x9f, 0xf8, 0x5b, 0xe8, 0x75, 0x06, 0xdc, 0xa6, 0x9f, 0xf2, 0x7b, 0xa6, 0xee, 0x04, 0x8c,
	0xad, 0xce, 0x5e, 0x01, 0xc9, 0xc4, 0x72, 0xad, 0xf4, 0x7f, 0x1e, 0xe4, 0xf4, 0x1d, 0x3c, 0x79,
	0x30, 0x9d, 0x8e, 0x00, 0x92, 0x74, 0x36, 0x9b, 0x27, 0xc9, 0x22, 0x5d, 0xfa, 0x0e, 0x05, 0x20,
	0x8b, 0xcf, 0xd1, 0x72, 0x1e, 0xfa, 0xee, 0xe9, 0x6b, 0xf0, 0x1f, 0x0f, 0xa3, 0x03, 0xf0, 0xc2,
	0xaf, 0xdf, 0xcf, 0x7d, 0x87, 0x12, 0xd8, 0x4b, 0xbf, 0xf9, 0xee, 0xf4, 0x97, 0x0b, 0xde, 0xb9,
	0xbc, 0x42, 0xfa, 0x12, 0xfa, 0x89, 0xce, 0x1b, 0x9d, 0xad, 0xe8, 0x90, 0xef, 0x7e, 0x67, 0x3c,
	0xe4, 0xbb, 0xab, 0x30, 0x87, 0x1e, 0x03, 0x49, 0xb4, 0xac, 0xb3, 0x15, 0xb5, 0xad, 0x1e, 0xaa,
	0xef, 0xa1, 0xdf, 0xf5, 0xcf, 0x56, 0x8a, 0x1e, 0x71, 0xbb, 0x1c, 0x7c, 0xb7, 0x1c, 0x7c, 0xde,
	0x2d, 0xc7, 0xb8, 0xcf, 0xed, 0x1d, 0x99, 0x43, 0x3f, 0x02, 0xb1, 0xed, 0xfe, 0x69, 0x3e, 0xe4,
	0x7f, 0x79, 0x50, 0xe6, 0x5c, 0x10, 0xe3, 0xfb, 0xf0, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x4e, 0x18,
	0xaa, 0xc0, 0x8d, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NodeClient is the client API for Node service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeClient interface {
	StartVM(ctx context.Context, in *VmConfig, opts ...grpc.CallOption) (*Response, error)
	StopVM(ctx context.Context, in *UUID, opts ...grpc.CallOption) (*Response, error)
	ListVMs(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VmList, error)
	Health(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*HealthCheckResponse, error)
}

type nodeClient struct {
	cc *grpc.ClientConn
}

func NewNodeClient(cc *grpc.ClientConn) NodeClient {
	return &nodeClient{cc}
}

func (c *nodeClient) StartVM(ctx context.Context, in *VmConfig, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/Node/StartVM", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) StopVM(ctx context.Context, in *UUID, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/Node/StopVM", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) ListVMs(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VmList, error) {
	out := new(VmList)
	err := c.cc.Invoke(ctx, "/Node/ListVMs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) Health(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*HealthCheckResponse, error) {
	out := new(HealthCheckResponse)
	err := c.cc.Invoke(ctx, "/Node/Health", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeServer is the server API for Node service.
type NodeServer interface {
	StartVM(context.Context, *VmConfig) (*Response, error)
	StopVM(context.Context, *UUID) (*Response, error)
	ListVMs(context.Context, *empty.Empty) (*VmList, error)
	Health(context.Context, *empty.Empty) (*HealthCheckResponse, error)
}

func RegisterNodeServer(s *grpc.Server, srv NodeServer) {
	s.RegisterService(&_Node_serviceDesc, srv)
}

func _Node_StartVM_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VmConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).StartVM(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Node/StartVM",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).StartVM(ctx, req.(*VmConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_StopVM_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UUID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).StopVM(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Node/StopVM",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).StopVM(ctx, req.(*UUID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_ListVMs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).ListVMs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Node/ListVMs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).ListVMs(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_Health_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).Health(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Node/Health",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).Health(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Node_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Node",
	HandlerType: (*NodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartVM",
			Handler:    _Node_StartVM_Handler,
		},
		{
			MethodName: "StopVM",
			Handler:    _Node_StopVM_Handler,
		},
		{
			MethodName: "ListVMs",
			Handler:    _Node_ListVMs_Handler,
		},
		{
			MethodName: "Health",
			Handler:    _Node_Health_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "node.proto",
}
